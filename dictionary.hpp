#pragma once
#include <iostream>
#include <string>
#include <vector>
#include <map>
/*Именительный*/
std::map<long int, std::string> oneDigitI = {{1, "один "},{2,"два "},{3,"три "},
                                             {4,"четыре "},{5,"пять "},{6,"шесть "},
                                             {7,"семь "},{8,"восемь "},{9,"девять "} };

std::map<long int, std::string> digitNumsI = { {1,"одиннадцать "},{2,"двенадцать "},{3,"тринадцать "},
                                              {4,"четырнадцать "},{5,"пятнадцать "},{6,"шестнадцать "},
                                              {7,"семнадцать "},{8,"восемнадцать "},{9,"девятнадцать "} };

std::map<long int, std::string> twoDigitsI = {{1, "десять "},{2,"двадцать "},{3,"тридцать "},
                                              {4,"сорок "},{5,"пятьдесят "},{6,"шестьдесят "},
                                              {7,"семьдесят "},{8,"восемьдесят "},{9,"девяносто "} };

std::map<long int, std::string> threeDigitsI = {{1, "сто "},{2,"двести "},{3,"триста "},
                                                {4,"четыреста "},{5,"пятьсот "},{6,"шестьсот "},
                                                {7,"семьсот "},{8,"восемьсот "},{9,"девятьсот "} };

/*Родительный*/
std::map<long int, std::string> oneDigitR = { {1, "одного "},{2,"двух "},{3,"трёх "},
                                              {4,"четырёх "},{5,"пяти "},{6,"шести "},
                                              {7,"семи "},{8,"восеми "},{9,"девяти "} };

std::map<long int, std::string> digitNumsR = { {1,"одиннадцати "},{2,"двенадцати "},{3,"тринадцати "},
                                               {4,"четырнадцати "},{5,"пятнадцати "},{6,"шестнадцати "},
                                               {7,"семнадцати "},{8,"восемнадцати "},{9,"девятнадцати "} };

std::map<long int, std::string> twoDigitsR = { {1, "десяти "},{2,"двадцати "},{3,"тридцати "},
                                               {4,"сорока "},{5,"пятидесяти "},{6,"шестидесяти "},
                                               {7,"семидесяти "},{8,"восьмидесяти "},{9,"девяноста "} };

std::map<long int, std::string> threeDigitsR = { {1, "ста "},{2,"двухсот "},{3,"трёхсот "},
                                                 {4,"четырёхсот "},{5,"пятисот "},{6,"шестисот "},
                                                 {7,"семисот "},{8,"восьмисот "},{9,"девятисот "} };

/*Дательный*/
std::map<long int, std::string> oneDigitD = { {1, "одному "},{2,"двум "},{3,"трём "},
                                              {4,"четырём "},{5,"пяти "},{6,"шести "},
                                              {7,"семи "},{8,"восеми "},{9,"девяти "} };

std::map<long int, std::string> digitNumsD = { {1,"одиннадцати "},{2,"двенадцати "},{3,"тринадцати "},
                                               {4,"четырнадцати "},{5,"пятнадцати "},{6,"шестнадцати "},
                                               {7,"семнадцати "},{8,"восемнадцати "},{9,"девятнадцати "} };

std::map<long int, std::string> twoDigitsD = { {1, "десяти "},{2,"двадцати "},{3,"тридцати "},
                                               {4,"сорока "},{5,"пятидесяти "},{6,"шестидесяти "},
                                               {7,"семидесяти "},{8,"восемидесяти "},{9,"девяноста "} };

std::map<long int, std::string> threeDigitsD = { {1, "ста "},{2,"двумстам "},{3,"трёмстам "},
                                                 {4,"четырёмстам "},{5,"пятистам "},{6,"шестистам "},
                                                 {7,"семистам "},{8,"восемистам "},{9,"девятистам "} };
/*Винительный*/
std::map<long int, std::string> oneDigitV = { {1, "один "},{2,"два "},{3,"три "},
                                              {4,"четыре "},{5,"пять "},{6,"шесть "},
                                              {7,"семь "},{8,"восемь "},{9,"девять "} };

std::map<long int, std::string> digitNumsV = { {1,"одиннадцать "},{2,"двенадцать "},{3,"тринадцать "},
                                               {4,"четырнадцать "},{5,"пятнадцать "},{6,"шестнадцать "},
                                               {7,"семнадцать "},{8,"восемнадцать "},{9,"девятнадцать "} };

std::map<long int, std::string> twoDigitsV = { {1, "десять "},{2,"двадцать "},{3,"тридцать "},
                                               {4,"сорок "},{5,"пятьдесять "},{6,"шестидесять "},
                                               {7,"семьдесять "},{8,"восемьдесять "},{9,"девяносто "} };

std::map<long int, std::string> threeDigitsV = { {1, "сто "},{2,"двести "},{3,"триста "},
                                                {4,"четыреста "},{5,"пятьсот "},{6,"шестьсот "},
                                                {7,"семьсот "},{8,"восемьсот "},{9,"девятьсот "} };
/*Творительный*/
std::map<long int, std::string> oneDigitT = { {1, "одним "},{2,"двумя "},{3,"тремя "},
                                              {4,"четырьмя "},{5,"пятью "},{6,"шестью "},
                                              {7,"семью "},{8,"восемью "},{9,"девятью "} };

std::map<long int, std::string> digitNumsT = { {1,"одиннадцатью "},{2,"двенадцатью "},{3,"тринадцатью "},
                                               {4,"четырнадцатью "},{5,"пятнадцатью "},{6,"шестнадцатью "},
                                               {7,"семнадцатью "},{8,"восемнадцатью "},{9,"девятнадцатью "} };

std::map<long int, std::string> twoDigitsT = { {1, "десятью "},{2,"двадцатью "},{3,"тридцатью "},
                                             {4,"сорока "},{5,"пятьюдесятью "},{6,"шестьюдесятью "},
                                             {7,"семьюдесятью "},{8,"восемьюдесятью "},{9,"девяноста "} };

std::map<long int, std::string> threeDigitsT = { {1, "ста "},{2,"двумястами "},{3,"тремястами "},
                                               {4,"четырьмястами "},{5,"пятьюстами "},{6,"шестьюстами "},
                                               {7,"семьюстами "},{8,"восьмьюстами "},{9,"девятьюстами "} };
/*Предложный*/
std::map<long int, std::string> oneDigitP = { {1, "одном "},{2,"двух "},{3,"трёх "},
                                              {4,"четырёх "},{5,"пяти "},{6,"шести "},
                                              {7,"семи "},{8,"восеми "},{9,"девяти "} };

std::map<long int, std::string> digitNumsP = { {1,"одиннадцати "},{2,"двенадцати "},{3,"тринадцати "},
                                               {4,"четырнадцати "},{5,"пятнадцати "},{6,"шестнадцати "},
                                               {7,"семнадцати "},{8,"восемнадцати "},{9,"девятнадцати "} };

std::map<long int, std::string> twoDigitsP = { {1, "десяти "},{2,"двадцати "},{3,"тридцати "},
                                               {4,"сорока "},{5,"пятидесяти "},{6,"шестидесяти "},
                                               {7,"семидесяти "},{8,"восемидесяти "},{9,"девяноста "} };

std::map<long int, std::string> threeDigitsP = { {1, "ста "},{2,"двухстах "},{3,"трёхстах "},
                                                 {4,"четырёхстах "},{5,"пятистах "},{6,"шестистах "},
                                                 {7,"семистах "},{8,"восьмистах "},{9,"девятистах "} };


std::map<long int, std::string> thousandI = {{1, "тысяча "},{2,"тысячи "},{3,"тысяч "} };
std::map<long int, std::string> thousandR = { {1, "тысячи "},{2,"тысяч "},{3,"тысяч "} };
std::map<long int, std::string> thousandD = { {1, "тысяче "},{2,"тысячам "},{3,"тысячам "} };
std::map<long int, std::string> thousandV = { {1, "тысячу "},{2,"тысячи "},{3,"тысяч "} }; //2-3-4 тысячи
std::map<long int, std::string> thousandT = { {1, "тысячей "},{2,"тысячами "},{3,"тысячами "} }; //2-3-4
std::map<long int, std::string> thousandP = { {1, "тысяче "},{2,"тысячах "},{3,"тысячах "} };

std::map<long int, std::string> millionsI = {{1, "миллион "},{2,"миллона "},{3,"миллионов "} };
std::map<long int, std::string> millionsR = { {1, "миллиона "},{2,"миллионов "},{3,"миллионов "} };
std::map<long int, std::string> millionsD = { {1, "миллиону "},{2,"миллионам "},{3,"миллионам "} };
std::map<long int, std::string> millionsV = { {1, "миллион "},{2,"миллиона "},{3,"миллионов "} }; //2-3-4
std::map<long int, std::string> millionsT = { {1, "миллионом "},{2,"миллионами "},{3,"миллионами "} };
std::map<long int, std::string> millionsP = { {1, "миллионе "},{2,"миллионах "},{3,"миллионах "} };

std::map<long int, std::string> billionsI = {{1, "миллиард "},{2,"миллиарда "},{3,"миллиардов "} };
std::map<long int, std::string> billionsR = { {1, "миллиарда "},{2,"миллиардов "},{3,"миллиардов "} };
std::map<long int, std::string> billionsD = { {1, "миллиарду "},{2,"миллиардам "},{3,"миллиардам "} };
std::map<long int, std::string> billionsV = { {1, "миллиард "},{2,"миллиарда "},{3,"миллиардов "} };
std::map<long int, std::string> billionsT = { {1, "миллиардом "},{2,"миллиардами "},{3,"миллиардами "} };
std::map<long int, std::string> billionsP = { {1, "миллиарде "},{2,"миллиардах "},{3,"миллиардах "} };


std::map<long int, std::string> thousandDigitI = {{1, "одна "}, {2,"две "} };
std::map<long int, std::string> thousandDigitR = { {1, "одной "}, {2,"двух "} };
std::map<long int, std::string> thousandDigitD = { {1, "одной "}, {2,"двум "} };
std::map<long int, std::string> thousandDigitV = { {1, "одну "}, {2,"две "} };
std::map<long int, std::string> thousandDigitT = { {1, "одной "}, {2,"двумя "} };
std::map<long int, std::string> thousandDigitP = { {1, "одной "}, {2,"двух "} };


std::map<long int, std::string> numGenderI = { {1, "один "}, {2,"одна "}, {3, "одно "}, {4, "два "}, {5, "две "}, {6, "два "}};
std::map<long int, std::string> numGenderR = { {1, "одного "}, {2,"одной "}, {3, "одного "}, {4, "двух "}, {5, "двух "}, {6, "двух "} };
std::map<long int, std::string> numGenderD = { {1, "одному "}, {2,"одной "}, {3, "одному "}, {4, "двум "}, {5, "двум "}, {6, "двум "} };
std::map<long int, std::string> numGenderV = { {1, "один "}, {2,"одну "}, {3, "одно "}, {4, "два "}, {5, "две "}, {6, "два "} };
std::map<long int, std::string> numGenderT = { {1, "одним "}, {2,"одной "}, {3, "одним "}, {4, "двумя "}, {5, "двумя "}, {6, "двумя "} };
std::map<long int, std::string> numGenderP = { {1, "одном "}, {2,"одной "}, {3, "одном "}, {4, "двух "}, {5, "двух "}, {6, "двух "} };